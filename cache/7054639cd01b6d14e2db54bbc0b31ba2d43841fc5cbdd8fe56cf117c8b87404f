{"children":[{"children":[],"uri":"https://www.notion.so/1fa75552ce7181b9ab71daa0e209b87f","type":"heading","createdTime":1747841591662,"lastEditedTime":1747841591662,"title":[["CacheSim"]],"depth":2},{"children":[],"uri":"https://www.notion.so/1fa75552ce718100ba71e9c1f56fb396","type":"heading","createdTime":1747841591662,"lastEditedTime":1747841591662,"title":[["Introduction"]],"depth":2},{"children":[],"uri":"https://www.notion.so/1fa75552ce7181bd999ceb589300c8ac","type":"text","createdTime":1747841591662,"lastEditedTime":1747841591662,"title":[["CacheSim is a trace-driven cache simulator that implements the Write Back Write Allocate policy. It is generic and can be instantiated at any level in the memory hierarchy - L1, L2, or L3. It is also flexible and can be configured to support any "],["cache size",[["i",null]]],[", "],["block size",[["i",null]]],[", or "],["associativity",[["i",null]]],[". Furthermore, CacheSim can be augmented with a stream-buffer prefetch unit whose size (# of stream buffers) and degree (# of blocks prefetched) is specified at the start of simulation."]]},{"children":[],"uri":"https://www.notion.so/1fa75552ce718197b291c2a48fcb674d","type":"text","createdTime":1747841591662,"lastEditedTime":1747841591662,"title":[]},{"children":[],"uri":"https://www.notion.so/1fa75552ce7181ce9f68d2e8fb3e92ac","type":"text","createdTime":1747841591662,"lastEditedTime":1747841591662,"title":[["CacheSim was built to compare the performance, area, and energy of different memory hierarchy configurations using a subset of the SPEC 2006 and SPEC 2007 benchmark suites."]]},{"children":[],"uri":"https://www.notion.so/1fa75552ce71819fa5e2ea94b8d1e7bf","type":"heading","createdTime":1747841591662,"lastEditedTime":1747841591662,"title":[["ðŸ¤– Working"]],"depth":2},{"children":[],"uri":"https://www.notion.so/1fa75552ce71818e928beee1a951b608","type":"bulleted_list","createdTime":1747841591662,"lastEditedTime":1747841591662,"title":[["A cache receives a R/W request from a level above it in the memory hierarchy (either the CPU or another cache)."]]},{"children":[],"uri":"https://www.notion.so/1fa75552ce7181eb9754d76118eb655e","type":"bulleted_list","createdTime":1747841591662,"lastEditedTime":1747841591662,"title":[["A cache interacts with the level below it only when it suffers from a R/W miss. It issues a R request to the next level and has to "],["allocate",[["i",null]]],[" the requested block."]]},{"children":[{"children":[],"uri":"https://www.notion.so/1fa75552ce7181bba6ecf86004fff8fb","type":"bulleted_list","createdTime":1747841591663,"lastEditedTime":1747841591663,"title":[["Making space for the requested block "],["X -",[["i",null]]],[" If there is at least one invalid block in the set, then there is already space for the requested block "],["X",[["i",null]]],[" and no further action is required. If not, then the LRU block is evicted by issuing a write to the next level."]]},{"children":[],"uri":"https://www.notion.so/1fa75552ce7181158d98d3e2225f3f4a","type":"bulleted_list","createdTime":1747841591663,"lastEditedTime":1747841591663,"title":[["Bringing in the requested block "],["X",[["i",null]]],[" - Issue a R request to the next level in memory hierarchy and place "],["X ",[["i",null]]],["in the set."]]}],"uri":"https://www.notion.so/1fa75552ce7181e6bcbdd99c887d2f2b","type":"bulleted_list","createdTime":1747841591662,"lastEditedTime":1747841591662,"title":[["A block is allocated in the cache in two steps:"]]},{"children":[],"uri":"https://www.notion.so/1fa75552ce7181dc87add6bb3ddb1e18","type":"bulleted_list","createdTime":1747841591662,"lastEditedTime":1747841591662,"title":[["The LRU counters associated with the blocks in a set are updated on every access. Blocks are also marked dirty when written to and invalid when evicted."]]},{"children":[],"uri":"https://www.notion.so/1fa75552ce7181dd95f2cdd87cb3a743","type":"text","createdTime":1747841591662,"lastEditedTime":1747841591662,"title":[]},{"children":[],"uri":"https://www.notion.so/1fa75552ce7181b9838afe7a10baa1a0","type":"text","createdTime":1747841591662,"lastEditedTime":1747841591662,"title":[["Introducing a stream buffer prefetch unit adds another layer of complexity to CacheSim. The prefetch unit can support "],["N",[["i",null]]],[" stream buffers each of which has a degree "],["M",[["i",null]]],[". Each buffer has a valid bit that indicates the validity of the buffer as a whole. A valid bit of 0 implies that the buffer is empty and 1 implies that the buffer is full and contains "],["M",[["i",null]]],[" consecutive memory blocks. A R/W request for a block "],["X",[["i",null]]],[" has to now search both the cache and the stream buffer(s). As such, there are four possible scenarios."]]},{"children":[],"uri":"https://www.notion.so/1fa75552ce718112a19ee57509afdf59","type":"numbered_list","createdTime":1747841591662,"lastEditedTime":1747841591662,"title":[["Create a new prefetch stream: requested block misses in the cache and stream buffer"]]},{"children":[],"uri":"https://www.notion.so/1fa75552ce71819b9801e16483187327","type":"numbered_list","createdTime":1747841591662,"lastEditedTime":1747841591662,"title":[["Benefit from and continue a prefetch stream: Requested block misses in the cache but hits in the stream buffer"]]},{"children":[],"uri":"https://www.notion.so/1fa75552ce7181fe86f7f5e1860631d0","type":"text","createdTime":1747841591662,"lastEditedTime":1747841591662,"title":[]},{"children":[],"uri":"https://www.notion.so/1fa75552ce71819ca909e2355457ba5b","type":"text","createdTime":1747841591662,"lastEditedTime":1747841591662,"title":[]}],"uri":"https://www.notion.so/1fa75552ce7181a18a28fbdca093cc93","type":"page","createdTime":1747841591658,"lastEditedTime":1747841591658,"title":[["Designing a Simulator for a Cache, Branch Predictor, and Out-of-Order Pipelined Superscalar"]],"icon":"ðŸ“ˆ","fullWidth":false,"coverPosition":1,"properties":{"!`\"w":[["Yes"]],"'2]%":[["ece563"]],"98uZ":[["Here I describe some of the projects I worked on while taking a grad class on Microprocessor Architecture at my university."]],":H`m":[["Yes"]],"C'lP":[["No"]],"{iD?":[["ECE 563,Microprocessor Architecture"]],"|Ay0":[["post"]]}}